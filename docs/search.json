[
  {
    "objectID": "Introduction_to_Statistics.html",
    "href": "Introduction_to_Statistics.html",
    "title": "Introduction to Statistics in R",
    "section": "",
    "text": "Learning Goals\n\nReview common statistical tests.\nLearn how to run these statistical tests in R.\n\n\n\nOverview of this workshop\nIn this workshop, we are going to re-introduce common statistical tests you have already been introduced to in JMP. We will review what kinds of data require different statistical tests and learn how to run these statistical tests in R. We will walk through how to get summary statistics for each test in R so that you can use these in scientific reports.\n\nYou will need these R packages installed and loaded:\n\ninstall.packages(c(\"palmerpenguins\", \"tidyverse\", \"multcomp\"))\n\nlibrary(multcomp)\nlibrary(palmerpenguins)\nlibrary(ggplot2)\nlibrary(tidyverse)\n\n\n\n\nReview of key statistics terms\nHypotheses: testable statements of expectation or prediction.\nNull hypothesis: sample means are not different.\nAlternative hypothesis: sample means are different.\nDegrees of freedom: the number of replicates minus the number of groups you are testing (usually, but varies by test)\n\n\nLoading our example dataset\n\nFor the examples below, I’m going to be using an ecological dataset on penguins from Palmer Station in Antarctica.\n\n#get the penguins dataset from the palmerpenguins package\npenguins &lt;- palmerpenguins::penguins\n\nWhat data do we have in the penguins dataset?\n\nstr(penguins)\n\ntibble [344 × 8] (S3: tbl_df/tbl/data.frame)\n $ species          : Factor w/ 3 levels \"Adelie\",\"Chinstrap\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ island           : Factor w/ 3 levels \"Biscoe\",\"Dream\",..: 3 3 3 3 3 3 3 3 3 3 ...\n $ bill_length_mm   : num [1:344] 39.1 39.5 40.3 NA 36.7 39.3 38.9 39.2 34.1 42 ...\n $ bill_depth_mm    : num [1:344] 18.7 17.4 18 NA 19.3 20.6 17.8 19.6 18.1 20.2 ...\n $ flipper_length_mm: int [1:344] 181 186 195 NA 193 190 181 195 193 190 ...\n $ body_mass_g      : int [1:344] 3750 3800 3250 NA 3450 3650 3625 4675 3475 4250 ...\n $ sex              : Factor w/ 2 levels \"female\",\"male\": 2 1 1 NA 1 2 1 2 NA NA ...\n $ year             : int [1:344] 2007 2007 2007 2007 2007 2007 2007 2007 2007 2007 ...\n\n\nWe can see from the str() function that the penguins dataset has a set of bill, flipper, and body mass measurements for penguins from a set of species from different islands. These individuals are also different sexes and from different years.\n\n\nSummary statistics in R\nMaybe even before you start analyzing your data, you may be interested in the distribution of your data, especially within and across groups. You can calculate common summary statistics using functions in R.\n\n#mean body mass of penguins\nmean(penguins$body_mass_g) \n\n[1] NA\n\n#the $ operator tells R to treat the column in that dataframe like a vector\n\nIf any of our data are NA values - the mean() function will tell us that the mean is also NA. This is not helpful! There is an additional argument in the mean function that lets us bypass this:\n\n#get the mean body mass of penguins and remember to remove NA values!\nmean(penguins$body_mass_g, na.rm = T)\n\n[1] 4201.754\n\n\nYou could also look at the means across groups using the tidyverse\n\npenguins %&gt;%\n  #group the penguins dataset by sex\n  group_by(sex) %&gt;%\n  #look at the mean body mass by sex\n  summarise(mean = mean(body_mass_g, na.rm = T))\n\n# A tibble: 3 × 2\n  sex     mean\n  &lt;fct&gt;  &lt;dbl&gt;\n1 female 3862.\n2 male   4546.\n3 &lt;NA&gt;   4006.\n\n\n\n\nT-tests\nUSE: T-tests test differences in the mean of two groups.\nUsing the penguins dataset, we could come up with a number of ways that this dataset is “grouped”. One of the “groups” that only has two categories is sex, so we can use a t-test to test for differences in mean body measurements between male and female penguins. Let’s start by examining body mass.\nWhat is the hypothesis?\nWhat is the null hypothesis?\nWhat is the alternative hypothesis?\nWe can use the t.test() function to test whether penguins of different sexes have different mean body masses.\n\n#is there a difference in body mass by sex in the penguin dataset?\nt.test(penguins$body_mass_g ~ penguins$sex)\n\n\n    Welch Two Sample t-test\n\ndata:  penguins$body_mass_g by penguins$sex\nt = -8.5545, df = 323.9, p-value = 4.794e-16\nalternative hypothesis: true difference in means between group female and group male is not equal to 0\n95 percent confidence interval:\n -840.5783 -526.2453\nsample estimates:\nmean in group female   mean in group male \n            3862.273             4545.685 \n\n\nThis summary shows us three important statistics, including the t-statistic (t), the degrees of freedom (df), and the p-value (p-value). It also gives us the means for each group.\nRemember, if you are running t-tests in a scientific paper, you will want to report the t-statistic, degrees of freedom, and p-value. In this case, running the t.test() function provides an output of all of these values for you.\nWe can look at the differences in penguin mass by sex by plotting these data using the ggplot() function in the ggplot2 package.\nFirst, above we noticed that there are NA values in the sex column, so we will want to remove those rows from the dataset using the filter() function. This doesn’t actually matter for the t-test itself, but makes the visualization make sense:\n\npenguins_2 &lt;- penguins %&gt;%\n  #filter() removes or keeps rows based on conditions\n  filter(!is.na(sex)) #! tells R \"not\" and the is.na() function tests for NA values\n# so this filter is looking at the \"sex\" column in the dataset and keeping all rows\n# where \"sex\" is *not NA*\n\n\nggplot(data  = penguins_2, #the dataset we want to visualize\n       mapping = aes(x = sex, #the \"aesthitics\" aka what is \"x\" and \"y\"?\n                     y = body_mass_g)) +\n  geom_boxplot() #what kind of plot do we want to plot? I've chosen a boxplot.\n\n\n\n\nWe can see that, even across species, that we have to reject the null hypothesis that “female and male penguins are the same body mass”\n\n\nANOVA\nUSE: Tests differences between two or more groups.\nThe penguins dataset also has the potential for us to test across more than two levels of one group (one-way ANOVA) or across different combinations of groups (two-way ANOVA). For example, we could look at body mass across species (one-way ANOVA), or across species and sex (two-way ANOVA).\nWhy don’t we try the simpler of these two, and just look at how body mass varies across the three different species of penguins in the dataset (one-way ANOVA).\nWhat is the hypothesis?\nWhat is the null hypothesis?\nWhat is the alternative hypothesis?\nThere are a couple of functions that let us do this, including the oneway.test() function.\n\noneway.test(body_mass_g ~ species, #body mass differences by species group\n  data = penguins, #define the dataset we want to use\n  var.equal = TRUE) # assuming equal variances\n\n\n    One-way analysis of means\n\ndata:  body_mass_g and species\nF = 343.63, num df = 2, denom df = 339, p-value &lt; 2.2e-16\n\n\nAnd the combiation of the aov() and summary() functions:\n\npenguin_anova &lt;- aov(body_mass_g ~ species, #body mass by species group\n  data = penguins #define the dataset we want to use\n)\n\n#use the summary function to look at the results of the penguin_anova\nsummary(penguin_anova)\n\n             Df    Sum Sq  Mean Sq F value Pr(&gt;F)    \nspecies       2 146864214 73432107   343.6 &lt;2e-16 ***\nResiduals   339  72443483   213698                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n2 observations deleted due to missingness\n\n\nIn the oneway.test() function above, we see that we get an f-statistic (F), the degrees of freedom for our group (num df), and a p-value (p-value). We get similar results from the two-step process using aov() and summary(). In this case, the values are presented as a table, in which we are interested in the species row, with F being the f-statistic, Df being the degrees of freedom, and Pr(&gt;F) being the p-value.\nRemember, if you are using an ANOVA in a scientific paper, you will want to report the f-statistic, degrees of freedom and p-value.\nANOVAs are a bit different from t-tests because they have multiple “paths”. If you tested for a difference among groups and found no difference (p-value &gt;0.05), then you would stop where we are now and report only the results of the ANOVA test. However, if there is a difference (p-value &lt; 0.05), you might want to know how the species differ from each other. We can do this by performing a post-hoc test like a Tukey’s HSD test. These tests penalize each comparison because you are testing many groups and so might just randomly get a significant value even if the relationship wasn’t significant (type-1 error in statistics).\nFor this test, we’ll be using the glht() function in the multcomp package, which performs a Tukey’s HSD test on an ANOVA with a significant difference.\n\n# Tukey HSD test:\npost_test &lt;- glht(penguin_anova, #define the ANOVA object to test\n  linfct = mcp(species = \"Tukey\") #tell the function to run Tukey's\n)\n\n#look at the summary:\nsummary(post_test)\n\n\n     Simultaneous Tests for General Linear Hypotheses\n\nMultiple Comparisons of Means: Tukey Contrasts\n\n\nFit: aov(formula = body_mass_g ~ species, data = penguins)\n\nLinear Hypotheses:\n                        Estimate Std. Error t value Pr(&gt;|t|)    \nChinstrap - Adelie == 0    32.43      67.51    0.48     0.88    \nGentoo - Adelie == 0     1375.35      56.15   24.50   &lt;1e-05 ***\nGentoo - Chinstrap == 0  1342.93      69.86   19.22   &lt;1e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n(Adjusted p values reported -- single-step method)\n\n\nIn this summary, we are interested in the values under the Linear Hypothesis header. each of these is a comparison with the null hypothesis defined (“== 0” means that we’re testing each pair with the null hypothesis that they are not different). The last column in this table Pr(&gt;|t|) gives the adjusted p-value for differences among pairs.\nWhat we can interpret by looking at this table is that the mean body mass for a Gentoo and Adelie penguin are significantly different, and so are the mean body masses for Gentoo and Chinstrap penguins. However, Chinstrap and Adelie penguins do not have clearly different mean body masses.\nWe can visualize these results again using ggplot() and a boxplot\n\nggplot(data = penguins, #using the penguins dataset\n       mapping = aes(x = species, #x axis is each species\n                     y = body_mass_g)) + #y axis is the body mass\n  geom_boxplot() #what kind of plot are we making - boxplot\n\n\n\n\nIt appears that Gentoo penguins are much bigger than both Adelie and Chinstrap penguins, but that Adelie and Chinstrap are relatively similar size.\n\n\nLinear regression\nUSE: Tests for relationship different from the mean line of two variables.\nWe might also be interested in whether penguins with a larger mass had longer flippers, which we can also test using the penguins dataset. For this test, we’ll use a linear regression, since we are interested in the relationship between two continuous variables and how that relationship varies from the mean line.\nWhat is the hypothesis?\nWhat is the null hypothesis?\nWhat is the alternative hypothesis?\nFor this test, we are going to use the lm() function in conjunction with the summary() function to test for a relationship between body mass and flipper length in penguins.\n\nregression_mod &lt;- lm(flipper_length_mm ~ body_mass_g, #predicting flipper length\n                     #from body mass\n                     data = penguins) #data is the penguins dataset\n\n#look at the summary of this model\nsummary(regression_mod)\n\n\nCall:\nlm(formula = flipper_length_mm ~ body_mass_g, data = penguins)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-23.7626  -4.9138   0.9891   5.1166  16.6392 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 1.367e+02  1.997e+00   68.47   &lt;2e-16 ***\nbody_mass_g 1.528e-02  4.668e-04   32.72   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 6.913 on 340 degrees of freedom\n  (2 observations deleted due to missingness)\nMultiple R-squared:  0.759, Adjusted R-squared:  0.7583 \nF-statistic:  1071 on 1 and 340 DF,  p-value: &lt; 2.2e-16\n\n\nThis output looks really similar to the output of the aov() and summary() combo for ANOVAs above, which is nice for interpretation across tests! In this case, we might be interested in both rows of the table, since the intercept row gives us an idea of where the “line” of our linear model crosses the y-axis (the “intercept”). However, what we are mostly interested in is the linear relationship between body mass and flipper length, which we can gather from the body_mass_g row. In this table, the Estimate tells you the “slope” of the relationship (line) between body mass and flipper length. In this case, it is a positive value, so larger body mass also means longer flipper length. The next value we are interested in is the Pr(&gt;|t|) column, which gives us the p-value of the relationship between body mass and flipper length. We can also see below the table that we have several \\(R^2\\) statistics reported. In this case with just one predictor variable, we can look at either, because they are the same. In this case, our \\(R^2 = 0.76\\), which suggests a strong relationship between body mass and flipper length. You can also see that in this summary we get a degrees of freedom. Remember, for a scientific paper, you would want to report the degrees of freedom and the \\(R^2\\) value.\nWe can visualize this linear relationship a couple of ways, either by letting ggplot define the linear relationship using the geom_smooth() layer on the plot, or by defining our own linear relationship using the results of the table from the summary() function above for the intercept and slope values and using the geom_abline() layer on the plot\nVersion 1:\n\nggplot(data = penguins, #dataset to visualize\n       mapping = aes(x = body_mass_g, #x is the body mass\n                     y = flipper_length_mm)) + #y is the flipper length\n  geom_point() + #put each data point as a \"point\" layer on the graph\n  #add a line to the graph that ggplot determines:\n  geom_smooth(method = 'lm', #method is linear regression model, 'lm'\n              se = F) #don't show the shaded standard errors\n\n\n\n\nVersion 2:\n\nggplot(data = penguins, #dataset to visualize\n       mapping = aes(x = body_mass_g, #x is the body mass \n                     y = flipper_length_mm)) + #y is the flipper length\n  geom_point() + #put each data point as a \"point\" layer on the graph\n  #add a line to the graph that you define based on the results\n  #of the summary() function above\n  geom_abline(slope = 1.528e-02, #the \"Estimate\" for body_mass_g from summary\n              intercept = 1.367e+02) #the \"Estimate\" for the intercept from summary\n\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n\nChi-Squared Test\nUSE: Tests “goodness of fit” for categorical data. Or: is the frequency distribution different from random?\nChi-Squared tests look at the frequency distributions of the occurrence of different combinations of two groups and assess whether the frequency distributions are the same across groups. In the penguins dataset, we might be interested in whether the ratio of male to female penguins is the same across islands. Maybe some islands have more females than others?\nWhat is the hypothesis?\nWhat is the null hypothesis?\nWhat is the alternative hypothesis?\nFor Chi-squared tests, we need to get the data into the format of a contingency table. This is a fancy word for a table that summaries the frequency (counts) of observations in different combinations of categories. In this case, we are interested in the category of island and the category of sex on each island. We can set up this contingency table using tools we’ve already used in the tidyverse package, including grouping variables by different columns and summarizing by groups. Remember that some of the sex values were NA in the original dataset, so we’ll start with the penguins_2 object we created to visualize the results of the t-test above of body mass by sex.\n\npenguins_3 &lt;- penguins_2 %&gt;%\n  #get a tally by combinations of island and sex\n  group_by(island, sex) %&gt;%\n  tally() #tally() function just counts the number of cases in each combiation\n#of the groups you defined\n\n#look at this dataset\npenguins_3\n\n# A tibble: 6 × 3\n# Groups:   island [3]\n  island    sex        n\n  &lt;fct&gt;     &lt;fct&gt;  &lt;int&gt;\n1 Biscoe    female    80\n2 Biscoe    male      83\n3 Dream     female    61\n4 Dream     male      62\n5 Torgersen female    24\n6 Torgersen male      23\n\n\nThis still isn’t quite a contingency table, but we can use some more tidyverse data manipulation to get us there.\n\npenguins_4 &lt;- penguins_3 %&gt;%\n  pivot_wider(names_from = sex, #make each sex its own column\n              values_from = n) %&gt;% #fill those columns with the counts\n  column_to_rownames(var = \"island\") #make the island name the row names vs its own column\n\npenguins_4\n\n          female male\nBiscoe        80   83\nDream         61   62\nTorgersen     24   23\n\n\nNow this is a contingency table that we can test with a Chi-squared test! In R, the function we’ll be using is chisq.test()\n\nchisq.test(penguins_4)\n\n\n    Pearson's Chi-squared test\n\ndata:  penguins_4\nX-squared = 0.057599, df = 2, p-value = 0.9716\n\n\nIn this case, we see the X-squared statistic, the degrees of freedom (df) and the p-value of the test. We can interpret this that there is no difference in the distributions of male-female across islands because the p-value is &gt; 0.05. In a scientific paper, you would report the X-squared statistic, the degrees of freedom (df) and the p-value.\nThere are several ways we could visualize these data, but one way might be to present proportional bar graphs of male-female ratios for each island. Now, even though the chisq.test() function wanted some version of the data in a contingency table, we can go back to the “tidy” data we first summarized in the penguins_3 data object\n\nstr(penguins_3)\n\ngropd_df [6 × 3] (S3: grouped_df/tbl_df/tbl/data.frame)\n $ island: Factor w/ 3 levels \"Biscoe\",\"Dream\",..: 1 1 2 2 3 3\n $ sex   : Factor w/ 2 levels \"female\",\"male\": 1 2 1 2 1 2\n $ n     : int [1:6] 80 83 61 62 24 23\n - attr(*, \"groups\")= tibble [3 × 2] (S3: tbl_df/tbl/data.frame)\n  ..$ island: Factor w/ 3 levels \"Biscoe\",\"Dream\",..: 1 2 3\n  ..$ .rows : list&lt;int&gt; [1:3] \n  .. ..$ : int [1:2] 1 2\n  .. ..$ : int [1:2] 3 4\n  .. ..$ : int [1:2] 5 6\n  .. ..@ ptype: int(0) \n  ..- attr(*, \".drop\")= logi TRUE\n\nggplot(data = penguins_3, #the \"tidy\" summarised island-sex penguin dataset\n       mapping = aes(x = island, #x is the island\n                     y = n, #y is the count of male-female on each island\n                     fill = sex)) + #color of the bar portion is sex\ngeom_bar(stat = \"identity\", #tell geom_bar that we want to see each group\n         position = \"fill\") #make each proportional to 1 in that group\n\n\n\n\nAs you can see visually - there are no clear differences in the sex ratios per island.\n\n\nFinal notes\n\nA word of caution about statistics\nAll of these tests come with underlying “assumptions” about the data you are fitting to the tests. This is the subject matter of entire semester-long statistics courses, but I just wanted to caution not to use tests as presented here and assume they are “right”, especially for ecological data. Ecological data tends to have unequal sample sizes, weird data distributions, and many other attributes that mean many of these tests are not always the most proper tests to use. The statistics resources linked on the bottom of the workshop website would be a great place to start diving deeper into the messy world of ecological statistics!\n\n\nVisualizations\nOne of the great things about ggplot2 is that you can also put the text of summary statistics and indicators in to graphs. So, for a linear regression, you could put the \\(R^2\\) value of the relationship somewhere on the graph. It’s somewhat outside the scope of the introductory nature of the material I presented today, but online forums have great tutorials on how to do this. Also, just a keyword hint, annotate() layers in ggplot() let you add all kinds of fun text and other symbols.\nHere’s a figure I might put in a paper for a linear regression:\n\n#make a label for the annotation of the graph\nlabel &lt;- paste(\"R^2 == 0.78\")\n\nggplot(data = penguins, #dataset to visualize\n       aes(x = body_mass_g, #x is body mass\n           y = flipper_length_mm)) + #y is flipper length\n  geom_point(size = 2) + #make a point layer for the data points and \n  #make the size of the points a bit bigger with the 'size' argument\n  #then, make a line that is defined from the summary function above?\n  geom_abline(slope = 1.528e-02, #the \"Estimate\" for body_mass_g from summary\n              intercept = 1.367e+02,#the \"Estimate\" for the intercept from summary\n              size = 1.25) +# make this line a bit thicker\n  theme_bw() + #set a custom theme to get rid of the grey background\n  annotate(geom = \"text\", #add text to the figure\n           x = 3000, y = 220, #where in x and y is the text?\n           label = label, #the text should be the label object you created above\n           size = 6, #how big should the text be?\n           parse = T) + #this tells the layer to make the 2 a superscript\n  labs(x = \"Body mass (g)\", #make a nicer version of the x axis label\n       y = \"Flipper length (mm)\") + #make a nicer version of the y axis label\n  theme(axis.text = element_text(size = 15), #make the axis text a bit bigger\n        axis.title = element_text(size = 18)) #make axis titles a bit bigger"
  },
  {
    "objectID": "stats_workshop.html",
    "href": "stats_workshop.html",
    "title": "stats_workshop",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "stats_workshop.html#quarto",
    "href": "stats_workshop.html#quarto",
    "title": "stats_workshop",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  }
]